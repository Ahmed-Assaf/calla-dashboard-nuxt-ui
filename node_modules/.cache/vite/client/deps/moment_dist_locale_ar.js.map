{
  "version": 3,
  "sources": ["../../../../moment/dist/locale/ar.js"],
  "sourcesContent": ["//! moment.js locale configuration\r\n//! locale : Arabic [ar]\r\n//! author : Abdel Said: https://github.com/abdelsaid\r\n//! author : Ahmed Elkhatib\r\n//! author : forabi https://github.com/forabi\r\n\r\nimport moment from '../moment';\r\n\r\nvar symbolMap = {\r\n        1: '١',\r\n        2: '٢',\r\n        3: '٣',\r\n        4: '٤',\r\n        5: '٥',\r\n        6: '٦',\r\n        7: '٧',\r\n        8: '٨',\r\n        9: '٩',\r\n        0: '٠',\r\n    },\r\n    numberMap = {\r\n        '١': '1',\r\n        '٢': '2',\r\n        '٣': '3',\r\n        '٤': '4',\r\n        '٥': '5',\r\n        '٦': '6',\r\n        '٧': '7',\r\n        '٨': '8',\r\n        '٩': '9',\r\n        '٠': '0',\r\n    },\r\n    pluralForm = function (n) {\r\n        return n === 0\r\n            ? 0\r\n            : n === 1\r\n              ? 1\r\n              : n === 2\r\n                ? 2\r\n                : n % 100 >= 3 && n % 100 <= 10\r\n                  ? 3\r\n                  : n % 100 >= 11\r\n                    ? 4\r\n                    : 5;\r\n    },\r\n    plurals = {\r\n        s: [\r\n            'أقل من ثانية',\r\n            'ثانية واحدة',\r\n            ['ثانيتان', 'ثانيتين'],\r\n            '%d ثوان',\r\n            '%d ثانية',\r\n            '%d ثانية',\r\n        ],\r\n        m: [\r\n            'أقل من دقيقة',\r\n            'دقيقة واحدة',\r\n            ['دقيقتان', 'دقيقتين'],\r\n            '%d دقائق',\r\n            '%d دقيقة',\r\n            '%d دقيقة',\r\n        ],\r\n        h: [\r\n            'أقل من ساعة',\r\n            'ساعة واحدة',\r\n            ['ساعتان', 'ساعتين'],\r\n            '%d ساعات',\r\n            '%d ساعة',\r\n            '%d ساعة',\r\n        ],\r\n        d: [\r\n            'أقل من يوم',\r\n            'يوم واحد',\r\n            ['يومان', 'يومين'],\r\n            '%d أيام',\r\n            '%d يومًا',\r\n            '%d يوم',\r\n        ],\r\n        M: [\r\n            'أقل من شهر',\r\n            'شهر واحد',\r\n            ['شهران', 'شهرين'],\r\n            '%d أشهر',\r\n            '%d شهرا',\r\n            '%d شهر',\r\n        ],\r\n        y: [\r\n            'أقل من عام',\r\n            'عام واحد',\r\n            ['عامان', 'عامين'],\r\n            '%d أعوام',\r\n            '%d عامًا',\r\n            '%d عام',\r\n        ],\r\n    },\r\n    pluralize = function (u) {\r\n        return function (number, withoutSuffix, string, isFuture) {\r\n            var f = pluralForm(number),\r\n                str = plurals[u][pluralForm(number)];\r\n            if (f === 2) {\r\n                str = str[withoutSuffix ? 0 : 1];\r\n            }\r\n            return str.replace(/%d/i, number);\r\n        };\r\n    },\r\n    months = [\r\n        'يناير',\r\n        'فبراير',\r\n        'مارس',\r\n        'أبريل',\r\n        'مايو',\r\n        'يونيو',\r\n        'يوليو',\r\n        'أغسطس',\r\n        'سبتمبر',\r\n        'أكتوبر',\r\n        'نوفمبر',\r\n        'ديسمبر',\r\n    ];\r\n\r\nexport default moment.defineLocale('ar', {\r\n    months: months,\r\n    monthsShort: months,\r\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\r\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\r\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\r\n    weekdaysParseExact: true,\r\n    longDateFormat: {\r\n        LT: 'HH:mm',\r\n        LTS: 'HH:mm:ss',\r\n        L: 'D/\\u200FM/\\u200FYYYY',\r\n        LL: 'D MMMM YYYY',\r\n        LLL: 'D MMMM YYYY HH:mm',\r\n        LLLL: 'dddd D MMMM YYYY HH:mm',\r\n    },\r\n    meridiemParse: /ص|م/,\r\n    isPM: function (input) {\r\n        return 'م' === input;\r\n    },\r\n    meridiem: function (hour, minute, isLower) {\r\n        if (hour < 12) {\r\n            return 'ص';\r\n        } else {\r\n            return 'م';\r\n        }\r\n    },\r\n    calendar: {\r\n        sameDay: '[اليوم عند الساعة] LT',\r\n        nextDay: '[غدًا عند الساعة] LT',\r\n        nextWeek: 'dddd [عند الساعة] LT',\r\n        lastDay: '[أمس عند الساعة] LT',\r\n        lastWeek: 'dddd [عند الساعة] LT',\r\n        sameElse: 'L',\r\n    },\r\n    relativeTime: {\r\n        future: 'بعد %s',\r\n        past: 'منذ %s',\r\n        s: pluralize('s'),\r\n        ss: pluralize('s'),\r\n        m: pluralize('m'),\r\n        mm: pluralize('m'),\r\n        h: pluralize('h'),\r\n        hh: pluralize('h'),\r\n        d: pluralize('d'),\r\n        dd: pluralize('d'),\r\n        M: pluralize('M'),\r\n        MM: pluralize('M'),\r\n        y: pluralize('y'),\r\n        yy: pluralize('y'),\r\n    },\r\n    preparse: function (string) {\r\n        return string\r\n            .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\r\n                return numberMap[match];\r\n            })\r\n            .replace(/،/g, ',');\r\n    },\r\n    postformat: function (string) {\r\n        return string\r\n            .replace(/\\d/g, function (match) {\r\n                return symbolMap[match];\r\n            })\r\n            .replace(/,/g, '،');\r\n    },\r\n    week: {\r\n        dow: 6, // Saturday is the first day of the week.\r\n        doy: 12, // The week that contains Jan 12th is the first week of the year.\r\n    },\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
